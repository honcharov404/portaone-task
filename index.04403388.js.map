{"mappings":"YAAA,IAAMA,EAASC,SAASC,cAAc,cAChCC,EAAWF,SAASC,cAAc,gBAClCE,EAAUH,SAASC,cAAc,cAEvCF,EAAOK,iBAAiB,UAGxB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAMC,EAAWF,EAAEG,OAAOC,KAAKC,MAE/B,GAA+B,IAA3BH,EAASI,OAAOC,OAElB,YADAC,MAAM,2BAIR,IAAMC,EAAeC,EAAYR,GAE3BS,EAAS,qFAAiGC,OAAbH,EAAa,gBAGhH,OAFAZ,EAASgB,UAAY,GAEdhB,EAASiB,mBAAmB,YAAaH,E,IAjBlDb,EAAQC,iBAAiB,SAoBzB,WACEF,EAASgB,UAAY,GACrBnB,EAAOqB,O,IAGT,IAAML,EAAc,SAAAN,GAClB,IAAMY,EAAgB,GAWtB,OAVAZ,EAAKa,MAAK,sBAAuBC,KAAI,SAAAC,GACnC,IAAMC,EAAaC,EAAaF,GAE5BC,GACFJ,EAAcM,KAAKF,E,IAIRC,EAAaL,EAAcO,W,EAKtCF,EAAe,SAAAG,GACnB,GAAIA,QAAJ,CAMA,IAFA,IAAIC,EAAW,IAAIC,IAEVC,EAAI,EAAGA,EAAIH,EAAKjB,OAAQoB,IAAK,CACpC,IAAIC,EAAgBJ,EAAKG,GACrBF,EAASI,IAAID,GACfH,EAASK,IAAIF,EAAeH,EAASM,IAAIH,GAAiB,GAE1DH,EAASK,IAAIF,EAAe,E,CAIhC,IAAK,IAAII,EAAI,EAAGA,EAAIR,EAAKjB,OAAQyB,IAC/B,GAA8B,IAA1BP,EAASM,IAAIP,EAAKQ,IACpB,OAAOR,EAAKQ,EAhBd,C","sources":["src/js/first-unique-letter.js"],"sourcesContent":["const formEl = document.querySelector('.text-form');\nconst resultEl = document.querySelector('.result-wrap');\nconst resetEl = document.querySelector('.btn-reset');\n\nformEl.addEventListener('submit', onFormSubmit);\nresetEl.addEventListener('click', onResetForm);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const formData = e.target.text.value;\n\n  if (formData.trim().length === 0) {\n    alert('Enter any text in area!');\n    return;\n  }\n\n  const uniqueLetter = createWords(formData);\n\n  const result = `<p class='result'> Your first unique letter in text: <span class='result-inner'>\"${uniqueLetter}\"</span></p>`;\n  resultEl.innerHTML = '';\n\n  return resultEl.insertAdjacentHTML('beforeend', result);\n}\n\nfunction onResetForm() {\n  resultEl.innerHTML = '';\n  formEl.reset();\n}\n\nconst createWords = text => {\n  const uniqueLetters = [];\n  text.split(/[ -/\\n/\\t.,\"/\\s+/]/).map(el => {\n    const allLetters = filterLetter(el);\n\n    if (allLetters) {\n      uniqueLetters.push(allLetters);\n    }\n  });\n\n  const result = filterLetter(uniqueLetters.toString());\n\n  return result;\n};\n\nconst filterLetter = word => {\n  if (word === null || word === undefined) {\n    return;\n  }\n\n  let mapWords = new Map();\n\n  for (let i = 0; i < word.length; i++) {\n    let currentLetter = word[i];\n    if (mapWords.has(currentLetter)) {\n      mapWords.set(currentLetter, mapWords.get(currentLetter) + 1);\n    } else {\n      mapWords.set(currentLetter, 1);\n    }\n  }\n\n  for (let i = 0; i < word.length; i++) {\n    if (mapWords.get(word[i]) === 1) {\n      return word[i];\n    }\n  }\n  return;\n};\n"],"names":["$77cb03dbf40184d2$var$formEl","document","querySelector","$77cb03dbf40184d2$var$resultEl","$77cb03dbf40184d2$var$resetEl","addEventListener","e","preventDefault","formData","target","text","value","trim","length","alert","uniqueLetter","$77cb03dbf40184d2$var$createWords","result","concat","innerHTML","insertAdjacentHTML","reset","uniqueLetters","split","map","el","allLetters","$77cb03dbf40184d2$var$filterLetter","push","toString","word","mapWords","Map","i","currentLetter","has","set","get","i1"],"version":3,"file":"index.04403388.js.map"}